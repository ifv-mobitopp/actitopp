plugins {
  id 'java-library'
  id 'maven-publish'
  id 'signing'
}

group = 'edu.kit.ifv.mobitopp'
version = project.hasProperty('next-version') ? project.property('next-version') : '0.0-SNAPSHOT'
wrapper.gradleVersion = '5.2'

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        release(MavenPublication) {
            from components.java
            artifact sourcesJar
            groupId project.group
            artifactId project.name
            version project.version
        }
		mavenJava(MavenPublication) {
			from components.java
			artifact sourcesJar
			groupId project.group
			artifactId project.name
			version project.version
			pom {
				name = 'actiTopp'
				description = 'actiTopp is a model to generate week activity schedules'
				url = 'https://github.com/kit-ifv/actitopp'
				licenses {
					license {
						name = 'GNU GENERAL PUBLIC LICENSE, Version 3'
						url = 'https://www.gnu.org/licenses/gpl-3.0-standalone.html'
					}
				}
				developers {
				}
				scm {
					connection = 'scm:git:git:https://github.com/kit-ifv/actitopp.git'
					developerConnection = 'scm:git:ssh:git@github.com:kit-ifv/actitopp.git'
					url = 'https://github.com/kit-ifv/actitopp'
				}
			}
		
		}
    }
	
    repositories {
        maven {
			name = 'Internal'
            credentials {
                username getPropertyOrDefault('repositoryUsername')
                password getPropertyOrDefault('repositoryPassword')
            }
            def repositoryUrl = getPropertyOrDefault('repositoryUrl')
            def releasesRepoUrl = "${repositoryUrl}/repository/maven-releases/"
            def snapshotsRepoUrl = "${repositoryUrl}/repository/maven-snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
		maven {
			name = 'External'
			credentials {
				username getPropertyOrDefault('user_oss')
				password getPropertyOrDefault('pw_oss')
			}

			def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
			def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
		}
    }
}

signing {
	sign publishing.publications.mavenJava
}

def getPropertyOrDefault(key) {
    return project.hasProperty(key) ? project.property(key) : key
}